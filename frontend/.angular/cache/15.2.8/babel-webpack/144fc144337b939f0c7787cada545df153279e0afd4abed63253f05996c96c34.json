{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/user.service\";\nexport class UserAuthGuard {\n  constructor(router, us) {\n    this.router = router;\n    this.us = us;\n  }\n  canActivate(route, state) {\n    if (this.us.islogin()) return true;else this.router.navigateByUrl('user/login');\n    return false;\n  }\n}\nUserAuthGuard.ɵfac = function UserAuthGuard_Factory(t) {\n  return new (t || UserAuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n};\nUserAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserAuthGuard,\n  factory: UserAuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,aAAa;EACxBC,YAAoBC,MAAa,EAAUC,EAAc;IAArC,WAAM,GAAND,MAAM;IAAiB,OAAE,GAAFC,EAAE;EAAc;EAE3DC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAG,IAAI,CAACH,EAAE,CAACI,OAAO,EAAE,EACpB,OAAO,IAAI,CAAC,KAEZ,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,YAAY,CAAC;IACvC,OAAO,KAAK;EAEd;;AAbWR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAS,SAAbT,aAAa;EAAAU,YAFZ;AAAM","names":["UserAuthGuard","constructor","router","us","canActivate","route","state","islogin","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\fullstack\\finalproject\\frontend\\src\\app\\user\\user-auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {UserService} from '../services/user.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthGuard implements CanActivate {\n  constructor(private router:Router, private us:UserService){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n    if(this.us.islogin())\n    return true;\n    else\n    this.router.navigateByUrl('user/login');\n    return false\n\n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}