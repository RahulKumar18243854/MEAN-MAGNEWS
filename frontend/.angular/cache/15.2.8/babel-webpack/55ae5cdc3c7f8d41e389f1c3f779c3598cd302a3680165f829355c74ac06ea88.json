{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/admin.service\";\nexport class AdminAuthGuard {\n  constructor(router, us) {\n    this.router = router;\n    this.us = us;\n  }\n  canActivate(route, state) {\n    if (this.us.islogin()) return true;else this.router.navigateByUrl('admin/login');\n    return false;\n  }\n}\nAdminAuthGuard.ɵfac = function AdminAuthGuard_Factory(t) {\n  return new (t || AdminAuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AdminService));\n};\nAdminAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminAuthGuard,\n  factory: AdminAuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,MAAa,EAAUC,EAAe;IAAtC,WAAM,GAAND,MAAM;IAAiB,OAAE,GAAFC,EAAE;EAAe;EAE5DC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAG,IAAI,CAACH,EAAE,CAACI,OAAO,EAAE,EACpB,OAAO,IAAI,CAAC,KAEZ,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,aAAa,CAAC;IACxC,OAAO,KAAK;EAEd;;AAbWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["AdminAuthGuard","constructor","router","us","canActivate","route","state","islogin","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\fullstack\\finalproject\\frontend\\src\\app\\admin\\admin-auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AdminService} from '../services/admin.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate {\n  constructor(private router:Router, private us:AdminService){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n    if(this.us.islogin())\n    return true;\n    else\n    this.router.navigateByUrl('admin/login');\n    return false\n\n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}